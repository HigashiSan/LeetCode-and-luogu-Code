class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int m = nums1.size();
        int n = nums2.size();
        vector<int> nums(m+n,0);

        int flag = 0;
        int flag1 = 0;
        int flag2 = 0;

        while(flag1 != m && flag2 != n)
        {
            if(nums1[flag1] < nums2[flag2])
            {
                nums[flag++] = nums1[flag1];
                flag1++;
            }
            else if(nums1[flag1] > nums2[flag2])
            {
                nums[flag++] = nums2[flag2];
                flag2++;
            }
            else
            {
                nums[flag++] = nums1[flag1];
                nums[flag++] = nums1[flag1];
                flag1++;
                flag2++;
            }
        }

        if(flag1==m)
        {
            for(int i=flag2;i<n;i++)
            {
                nums[flag++] = nums2[i];
            }
        }
        if(flag2==n)
        {
            for(int i=flag1;i<m;i++)
            {
                nums[flag++] = nums1[i];
            }
        }

        if((m+n)%2!=0)
        {
            return nums[(m+n-1)/2];
        } 
        else
        {
            return (nums[(m+n)/2] + nums[((m+n)/2) -1])/2.0;
        } 
    }
};
